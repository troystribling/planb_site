# This file is autogenerated. Instead of editing this file, please use the
# migrations feature of ActiveRecord to incrementally modify your database, and
# then regenerate this schema definition.

ActiveRecord::Schema.define(:version => 62) do

  create_table "articles_tags", :id => false, :force => true do |t|
    t.column "article_id", :integer
    t.column "tag_id",     :integer
  end

  create_table "blacklist_patterns", :force => true do |t|
    t.column "type",    :string
    t.column "pattern", :string
  end

  add_index "blacklist_patterns", ["pattern"], :name => "index_blacklist_patterns_on_pattern"

  create_table "blogs", :force => true do |t|
    t.column "settings", :text
    t.column "base_url", :string
  end

  create_table "categories", :force => true do |t|
    t.column "name",      :string
    t.column "position",  :integer
    t.column "permalink", :string
  end

  add_index "categories", ["permalink"], :name => "index_categories_on_permalink"

  create_table "categorizations", :force => true do |t|
    t.column "article_id",  :integer
    t.column "category_id", :integer
    t.column "is_primary",  :boolean
  end

  create_table "contents", :force => true do |t|
    t.column "type",           :string
    t.column "title",          :string
    t.column "author",         :string
    t.column "body",           :text
    t.column "extended",       :text
    t.column "excerpt",        :text
    t.column "keywords",       :string
    t.column "created_at",     :datetime
    t.column "updated_at",     :datetime
    t.column "user_id",        :integer
    t.column "permalink",      :string
    t.column "guid",           :string
    t.column "text_filter_id", :integer
    t.column "whiteboard",     :text
    t.column "name",           :string
    t.column "published",      :boolean,  :default => false
    t.column "allow_pings",    :boolean
    t.column "allow_comments", :boolean
    t.column "blog_id",        :integer,                     :null => false
    t.column "published_at",   :datetime
    t.column "state",          :text
  end

  add_index "contents", ["published"], :name => "index_contents_on_published"
  add_index "contents", ["text_filter_id"], :name => "index_contents_on_text_filter_id"
  add_index "contents", ["blog_id"], :name => "index_contents_on_blog_id"

  create_table "feedback", :force => true do |t|
    t.column "type",             :string
    t.column "title",            :string
    t.column "author",           :string
    t.column "body",             :text
    t.column "extended",         :text
    t.column "excerpt",          :text
    t.column "keywords",         :string
    t.column "created_at",       :datetime
    t.column "updated_at",       :datetime
    t.column "user_id",          :integer
    t.column "permalink",        :string
    t.column "guid",             :string
    t.column "text_filter_id",   :integer
    t.column "whiteboard",       :text
    t.column "article_id",       :integer
    t.column "email",            :string
    t.column "url",              :string
    t.column "ip",               :string,   :limit => 40
    t.column "blog_name",        :string
    t.column "name",             :string
    t.column "published",        :boolean,                :default => false
    t.column "allow_pings",      :boolean
    t.column "allow_comments",   :boolean
    t.column "blog_id",          :integer,                                   :null => false
    t.column "published_at",     :datetime
    t.column "state",            :text
    t.column "status_confirmed", :boolean
  end

  add_index "feedback", ["article_id"], :name => "index_feedback_on_article_id"
  add_index "feedback", ["text_filter_id"], :name => "index_feedback_on_text_filter_id"

  create_table "notifications", :force => true do |t|
    t.column "content_id", :integer
    t.column "user_id",    :integer
    t.column "created_at", :datetime
    t.column "updated_at", :datetime
  end

  create_table "page_caches", :force => true do |t|
    t.column "name", :string
  end

  add_index "page_caches", ["name"], :name => "index_page_caches_on_name"

  create_table "pings", :force => true do |t|
    t.column "article_id", :integer
    t.column "url",        :string
    t.column "created_at", :datetime
  end

  add_index "pings", ["article_id"], :name => "index_pings_on_article_id"

  create_table "redirects", :force => true do |t|
    t.column "from_path", :string
    t.column "to_path",   :string
  end

  create_table "resources", :force => true do |t|
    t.column "size",            :integer
    t.column "filename",        :string
    t.column "mime",            :string
    t.column "created_at",      :datetime
    t.column "updated_at",      :datetime
    t.column "article_id",      :integer
    t.column "itunes_metadata", :boolean
    t.column "itunes_author",   :string
    t.column "itunes_subtitle", :string
    t.column "itunes_duration", :integer
    t.column "itunes_summary",  :text
    t.column "itunes_keywords", :string
    t.column "itunes_category", :string
    t.column "itunes_explicit", :boolean
  end

  create_table "sessions", :force => true do |t|
    t.column "sessid",     :string
    t.column "data",       :text
    t.column "created_at", :datetime
    t.column "updated_at", :datetime
  end

  add_index "sessions", ["sessid"], :name => "index_sessions_on_sessid"

  create_table "sidebars", :force => true do |t|
    t.column "active_position", :integer
    t.column "config",          :text
    t.column "staged_position", :integer
    t.column "type",            :string
    t.column "blog_id",         :integer
  end

  create_table "sitealizer", :force => true do |t|
    t.column "path",       :string
    t.column "ip",         :string
    t.column "referer",    :string
    t.column "language",   :string
    t.column "user_agent", :string
    t.column "created_at", :datetime
    t.column "created_on", :date
  end

  create_table "tags", :force => true do |t|
    t.column "name",         :string
    t.column "created_at",   :datetime
    t.column "updated_at",   :datetime
    t.column "display_name", :string
  end

  create_table "text_filters", :force => true do |t|
    t.column "name",        :string
    t.column "description", :string
    t.column "markup",      :string
    t.column "filters",     :text
    t.column "params",      :text
  end

  create_table "triggers", :force => true do |t|
    t.column "pending_item_id",   :integer
    t.column "pending_item_type", :string
    t.column "due_at",            :datetime
    t.column "trigger_method",    :string
  end

  create_table "users", :force => true do |t|
    t.column "login",                    :string
    t.column "password",                 :string
    t.column "email",                    :text
    t.column "name",                     :text
    t.column "notify_via_email",         :boolean
    t.column "notify_on_new_articles",   :boolean
    t.column "notify_on_comments",       :boolean
    t.column "notify_watch_my_articles", :boolean
    t.column "notify_via_jabber",        :boolean
    t.column "jabber",                   :string
  end

end
